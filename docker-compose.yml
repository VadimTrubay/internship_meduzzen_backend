version: '3.11.5'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13.0-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  redis:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

celery_worker:
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - .env
  depends_on:
    - postgres
    - redis
  networks:
    - api_network
  volumes:
    - .:/code
  command: >
    sh -c "celery -A app.celery.celery worker --loglevel=warning --logfile=celery_worker.log"

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - api_network
    volumes:
      - .:/code
    command: >
      sh -c "celery -A app.celery.celery beat --loglevel=warning --logfile=celery_beat.log"

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - api_network
    volumes:
      - .:/code
    ports:
      - "5557:5555"
    command: >
      sh -c "celery flower --app=app.celery.celery --broker="${CELERY_BROKER_URL}""

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge